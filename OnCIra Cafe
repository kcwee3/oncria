#include <iostream>
#include <vector>
#include <iomanip> // for setw() to format output

using namespace std;

// Define a structure to represent a menu item
struct MenuItem {
    string name;
    double price;
};

// Function to display the menu
void displayMenu(const vector<MenuItem>& menu) {
    cout << "Menu:\n";
    cout << setw(20) << left << "Item" << "Price ($)\n";
    cout << string(30, '-') << endl;
    for (const auto& item : menu) {
        cout << setw(20) << left << item.name << item.price << endl;
    }
}

// Function to place an order
double placeOrder(const vector<MenuItem>& menu) {
    double total = 0.0;
    char choice;
    do {
        displayMenu(menu);
        int selection;
        cout << "Enter item number to order (1-" << menu.size() << "), 0 to finish: ";
        cin >> selection;
        if (selection >= 1 && selection <= menu.size()) {
            total += menu[selection - 1].price;
            cout << "Added " << menu[selection - 1].name << " to order. Current total: $" << total << endl;
        } else if (selection != 0) {
            cout << "Invalid selection. Please enter a number between 0 and " << menu.size() << endl;
        }
        cout << "Add another item? (y/n): ";
        cin >> choice;
    } while (choice == 'y' || choice == 'Y');
    return total;
}

int main() {
    // Create a menu
    vector<MenuItem> menu = {
        {"Espresso", 2.50},
        {"Latte", 3.00},
        {"Cappuccino", 3.25},
        {"Mocha", 3.50},
        {"Tea", 2.00},
        {"Croissant", 2.75},
        {"Muffin", 2.50}
    };

    // Place an order
    cout << "Welcome to OnCIra Cafe!\n";
    double total = placeOrder(menu);
    cout << "Thank you for your order! Your total is: $" << fixed << setprecision(2) << total << endl;

    return 0;
}